name: CI/CD + Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # üß© Step 1: Build & Test Backend
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: ./mcq_backend
        run: npm install

      - name: Run Tests
        working-directory: ./mcq_backend
        run: npm test --if-present

  # üß© Step 2: Build & Test Frontend
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: ./mcq_frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./mcq_frontend
        run: npm run build --if-present

  # üê≥ Step 3: Build & Push Docker Images
  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/quizify-backend:latest ./mcq_backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/quizify-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/quizify-frontend:latest ./mcq_frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/quizify-frontend:latest

  # üåç Step 4: Terraform Deploy to AWS
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: Initialize Terraform
        working-directory: ./terraform-quizify
        run: terraform init

      - name: Validate Terraform
        working-directory: ./terraform-quizify
        run: terraform validate

      - name: Plan Terraform
        working-directory: ./terraform-quizify
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform plan -out=tfplan

      - name: Apply Terraform (Auto-Approve)
        working-directory: ./terraform-quizify
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve tfplan
